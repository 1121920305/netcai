<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netcai.buyer.dao.OrderItemDao">

  <resultMap type="com.netcai.buyer.entity.OrderItem" id="orderItemMap">
     <result column="item_id" property="id"/>
     <result column="order_id" property="orderId"/>
     <result column="order_number" property="orderNumber"/>
     <result column="order_status" property="orderStatus"/>
     <result column="format_id" property="formatId"/>
     <result column="buyer_id" property="buyerId"/>
     <result column="seller_id" property="sellerId"/>
     <result column="delivery_type" property="deliveryType"/>
     <result column="delivery_status" property="deliveryStatus"/>
     <result column="seller_status" property="sellerStatus"/>
     <result column="buyer_status" property="buyerStatus"/>
     <result column="remark" property="remark"/>
     <result column="goods_amount" property="goodsAmount"/>
     <result column="delivery_money" property="deliveryMoney"/>
     <result column="create_time" property="createTime"/>
     <result column="delivery_receive_time" property="deliveryReceiveTime"/>
     <result column="delivery_finish_time" property="deliveryFinishTime"/>
     <result column="seller_finish_time" property="sellerFinishTime"/>
     <result column="buyer_finish_time" property="buyerFinishTime"/>
     <result column="method_id" property="methodId"/>
     <result column="goods_number" property="goodsNumber"/>
     <result column="goods_number_old" property="goodsNumberOld"/>
     <result column="goods_price" property="goodsPrice"/>
  </resultMap>
  
  
  <resultMap type="com.netcai.buyer.vo.GoodsCartVo" id="orderItemDetailVoMap">
  			 <result column="seller_logo" property="sellerLogo"/>
		     <result column="seller_id" property="sellerId"/>
		     <result column="seller_name" property="sellerName"/>
		     <result column="buyer_address" property="buyerAddress"/>
  		<collection property="productVos" ofType="com.netcai.buyer.vo.ProductVo">
		     <result column="goods_price" property="formatPrice"/>
		     <result column="goods_number" property="goodsNumber"/>
		     <result column="goods_amount" property="goodsAmount"/>
		     <result column="format_name" property="formatName"/>
		     <result column="format_num" property="formatNum"/>
		     <result column="method_name" property="methodName"/>
		     <result column="unit_name" property="unitName"/>
		     <result column="goods_name" property="goodsName"/>
		     <result column="remark" property="remark"/>
		     <result column="item_id" property="itemId"/>
		     <!-- 商品图片集合 -->
			<collection property="pictureList" ofType="com.netcai.buyer.entity.GoodsPicture">
		  	 	<result column="pic_url" property="picUrl"  />
			    <result column="is_main" property="isMain" />
			    <result column="pic_seq" property="picSeq"  />
	  	 	</collection>
  	 	</collection>
  </resultMap>
  
  <!-- 根据买家ID与订单ITEM Id取消订单 -->
  <update id="cancelOrderItem">
     update order_item oi inner join order_info o on oi.order_id=o.order_id set oi.order_status=2 
		where  oi.order_id=#{orderId} and o.pay_status in (0,1)
  </update>  

  <!-- 根据订单项取消订单 -->
  <update id="cancelOrderItemById">
      update order_item set order_status=2 where item_id=#{itemId};
	    UPDATE order_info oif SET oif.trade_status = "2" WHERE oif.order_id = (SELECT oi.order_id 
		FROM
		order_item oi 
		WHERE oi.item_id = #{itemId}) AND 	not exists (	SELECT * FROM order_item o WHERE o.order_id = (SELECT oi.order_id 
		FROM
		order_item oi 
		WHERE oi.item_id = #{itemId}) AND o.order_status = 1)
  </update>
  
   <!-- 根据订单项取消订单 -->
  <update id="cancelAllOrderItem">
      update order_item set order_status=2 where order_id=#{orderId}
  </update>
  
  <!-- 根据订单更新订单明细状态 -->
  <update id="updateOrderItemByOrderNumber">
      update order_item set order_status=1 where order_number=#{orderNumber}
  </update>
  
  <!-- 获取所有的订单项 -->
  <select id="getAllOrderItemByOrderId" resultMap="orderItemMap">
        select * from order_item where order_id=#{orderId}
  </select>
  
  <!-- 获取单个的订单项 -->
  <select id="getOrderItemByItemId" resultMap="orderItemMap">
        select * from order_item where item_id=#{itemId}
  </select>
  
  <select id="getOrderItemByOrderId" resultMap="orderItemDetailVoMap">
        select 
		b.buyer_address,
		o.goods_price,
		o.item_id,
		o.goods_number,
		o.goods_amount,
		gf.format_name,
		gf.format_num,
		pm.method_name,
		o.remark,
		s.seller_name,
		s.seller_id,
		s.seller_logo,
		gp.pic_url,
		gp.is_main,
		gp.pic_seq,
		gs.goods_name,
		u.unit_name
	    from 
	   	 order_item o 
	    left join process_method pm on pm.method_id=o.method_id
		inner join goods_format gf on gf.format_id=o.format_id
		inner join goods gs on gs.goods_id=gf.goods_id
		inner join seller s on s.seller_id=o.seller_id
		inner join unit u on u.unit_id=gf.unit_id
		inner join order_info oi on oi.order_id=o.order_id
		inner join buyer b on o.buyer_id= b.buyer_id
		left join goods_picture gp on gs.goods_id = gp.goods_id
		where 
			o.order_id=#{orderId}
		AND o.order_status!=2
  </select>
	
		<!-- 批量添加 (先查询商品价格)-->
	<insert id="insertOrderItemByBatch" parameterType="java.util.List">
		insert into order_item(
		      order_id ,
		      order_number ,
		      goods_number_old ,
		      order_status,
		      format_id,
		      buyer_id,
		      seller_id ,
		      seller_status,
		      buyer_status,
		      remark ,
		      goods_amount ,
		      goods_price,
		      goods_number,
		      method_id,
		      create_time)
				values
		 <foreach collection="list" item="item" separator=",">
		 	  (#{item.orderId },
		      #{item.orderNumber},
		      #{item.goodsNumberOld},
		      #{item.orderStatus},
		      #{item.formatId},
		      #{item.buyerId },
		      #{item.sellerId },
		      #{item.sellerStatus},
		      #{item.buyerStatus },
		      #{item.remark },
		      #{item.goodsAmount },
		      #{item.goodsPrice },
		      #{item.goodsNumber},
		      #{item.methodId},
		      #{item.createTime})
		   </foreach>
	</insert>
	
	<!-- 批量添加 (先查询商品价格)-->
	<insert id="insertOrderItem" parameterType="com.netcai.buyer.entity.OrderInfo">
		insert into order_item(
		      order_id ,
		      order_number ,
		      goods_number_old ,
		      order_status,
		      format_id,
		      buyer_id,
		      seller_id ,
		      seller_status,
		      buyer_status,
		      remark ,
		      goods_amount ,
		      goods_price,
		      goods_number,
		      method_id,
		      create_time)
				values
		 <foreach collection="orderItem" item="item" separator=",">
		 	  (#{orderId },
		      #{orderNumber},
		      #{item.goodsNumberOld},
		      #{item.orderStatus},
		      #{item.formatId},
		      #{item.buyerId },
		      #{item.sellerId },
		      #{item.sellerStatus},
		      #{item.buyerStatus },
		      #{item.remark },
		      #{item.goodsAmount },
		      #{item.goodsPrice },
		      #{item.goodsNumber},
		      #{item.methodId},
		      #{item.createTime})		   
	      </foreach>
	</insert>
</mapper>